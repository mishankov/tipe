name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  release:
    types: [ created ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 4
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
        os: [ubuntu-latest, macOS-latest, windows-latest]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install Poetry
      uses: Gr1N/setup-poetry@v8
    - run: poetry --version
    
    - name: Install dependencies
      run: poetry install
    
    - name: Lint
      run: poetry run black . --check
    
    - name: Test with pytest
      run: poetry run pytest

  publish:
      needs:
      - test
      
      if: github.event_name == 'release' && github.event.action == 'created'

      runs-on: ${{ matrix.os }}
      strategy:
        matrix:
          python-version: [ '3.11' ]
          os: [ ubuntu-latest ]

      steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Install Poetry
        uses: Gr1N/setup-poetry@v8
      - run: poetry --version

      - name: Setup Poetry for publish
        run: poetry config pypi-token.pypi ${{ secrets.PYPI_TOKEN }}

      - name: Publish
        run: poetry publish --build
